Steps for generating timetable:

1. Take required data [done]

	a. class
	b. faculty
	c. shift
	d. total section
	e. total period
	f. days
	g.optinal subject gap
	
2. Make a list carring tuple of rows and cols and sort it for each section in a dict [done]
	FOR EXAMPLE: dict_1={ 'section': [ (row, col) ] } [done]

3. Retrive teachers (short name) from data base and sort it to a dict_2 (having subjects as keys and teacher as values)[done]

NOTE: dicts in step 3 and step 4 must have the same keys (easy to merger data)

4. Retrive subject from data base and sort it to a dict_3 (having subject as keys and their sub units as values)[done] 

5. Merge datas from step 3 and step 4:

	a. Number of teacher // total units --> [teacher // units]
	
	b. Total sections // a --> [sections // teacher]

	c. choose (a) teacher randomly

	d. Choose (c) sections randomly. 

	e. Store in a dict in format { 'units': [Teacher, (sections)]}

6. Use these datas to put into the table:

	a. hold the suject from dict_4 to a variable

	b. hold teacher from dict_4 to a variable

	c. go to the selected sections and choose (row,col) from dict_1

	d. use datas of step a, b, c and place them in right order. 

7. check if coordinates repeated! 
	a. Equation = [current_row_number + (days_per_week + 1) ]

Handling Exceptions:
	a. managing slices with any periods request by users: